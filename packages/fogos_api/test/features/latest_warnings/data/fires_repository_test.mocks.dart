// Mocks generated by Mockito 5.4.4 from annotations
// in fogos_api/test/features/latest_warnings/data/fires_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:fogos_api/networking/fogos_base_client.dart' as _i4;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:warnings_api/environment.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEnvironment_0 extends _i1.SmartFake implements _i2.Environment {
  _FakeEnvironment_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FogosBaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockFogosBaseClient extends _i1.Mock implements _i4.FogosBaseClient {
  @override
  _i2.Environment get environment => (super.noSuchMethod(
        Invocation.getter(#environment),
        returnValue: _FakeEnvironment_0(
          this,
          Invocation.getter(#environment),
        ),
        returnValueForMissingStub: _FakeEnvironment_0(
          this,
          Invocation.getter(#environment),
        ),
      ) as _i2.Environment);

  @override
  set environment(_i2.Environment? _environment) => super.noSuchMethod(
        Invocation.setter(
          #environment,
          _environment,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i3.Response> listActiveFires() => (super.noSuchMethod(
        Invocation.method(
          #listActiveFires,
          [],
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #listActiveFires,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #listActiveFires,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> getSingleFireInformation(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleFireInformation,
          [id],
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #getSingleFireInformation,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #getSingleFireInformation,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> getFireRCMForTodayTomorrowAndAfter(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFireRCMForTodayTomorrowAndAfter,
          [id],
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #getFireRCMForTodayTomorrowAndAfter,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #getFireRCMForTodayTomorrowAndAfter,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> getFireHistoryResourcesManAerialTerrain(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFireHistoryResourcesManAerialTerrain,
          [id],
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #getFireHistoryResourcesManAerialTerrain,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #getFireHistoryResourcesManAerialTerrain,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> getFireHistoryStatus(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFireHistoryStatus,
          [id],
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #getFireHistoryStatus,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #getFireHistoryStatus,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Response>);
}
